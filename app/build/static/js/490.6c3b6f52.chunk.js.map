{"version":3,"file":"static/js/490.6c3b6f52.chunk.js","mappings":"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","sources":["components/ManageUserModal.js","components/Modal.js","components/Users.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport httpClientRequest from '../lib/httpClientRequest'\r\nimport ErrorBoundary from '../ErrorBoundary'\r\n\r\nexport default function ManageUserModal ({\r\n  handleSubmit, closeModal, createUser, update = false,\r\n  updateData = {}\r\n}) {\r\n  const [users, setUsers] = useState([])\r\n  const [fields, setFields] = useState([\r\n    { name: 'username', label: 'Username', value: '' },\r\n    { name: 'email', label: 'Email', value: '' },\r\n    { name: 'first_name', label: 'First Name', value: '' },\r\n    { name: 'last_name', label: 'Last Name', value: '' },\r\n    { name: 'department', label: 'Department', value: '' },\r\n    { name: 'position', label: 'Position', value: '' },\r\n    { name: 'phone_no', label: 'Phone No.', value: '' },\r\n    { name: 'site_address', label: 'Site Address', value: '' },\r\n    { name: 'country', label: 'Country', value: '' },\r\n    { name: 'state', label: 'State', value: '' },\r\n    { name: 'suburb', label: 'SubUrb', value: '' },\r\n    { name: 'expiration_date', label: 'Expiration Date', value: '' },\r\n    { name: 'MFA', label: 'MFA', value: 'No' },\r\n    { name: 'role', label: 'Role', value: 'Guest' }\r\n  ])\r\n\r\n  const addUser = async (e) => {\r\n    e.preventDefault()\r\n    // Create a user object with field values\r\n    const user = {}\r\n    fields.forEach((field) => {\r\n      user[field.name] = field.value\r\n    })\r\n\r\n    setUsers([...users, user])\r\n\r\n    const mappedData = fields.reduce((acc, cur) => {\r\n      return { ...acc, [cur.name]: cur.value }\r\n    }, {})\r\n\r\n    const result = await httpClientRequest.post('user/', mappedData)\r\n    createUser(result)\r\n  }\r\n\r\n  const fetchUserDataForUpdate = async () => {\r\n    try {\r\n      // Use the provided updateData for initializing field values\r\n      setFields((prevFields) => {\r\n        const updatedFields = [...prevFields]\r\n        updatedFields.forEach((field) => {\r\n          field.value = updateData[field.name] || ''\r\n        })\r\n        return updatedFields\r\n      })\r\n    } catch (error) {\r\n      console.error('Error initializing fields for update:', error)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchRole()\r\n    if (update) {\r\n      fetchUserDataForUpdate()\r\n    }\r\n  }, [])\r\n\r\n  const fetchRole = async () => {\r\n    try {\r\n      const userRole = await httpClientRequest.get('http://localhost:8009/milestone/api/v1/user/role')\r\n      setFields((prevFields) => {\r\n        const roleFieldIndex = prevFields.findIndex((field) => field.name === 'role')\r\n        const updatedFields = [...prevFields]\r\n        updatedFields[roleFieldIndex].options = userRole?.data\r\n        const MFA = prevFields.findIndex((field) => field.name === 'MFA')\r\n        updatedFields[MFA].options = [{\r\n          name: 'Yes'\r\n        },\r\n        {\r\n          name: 'No'\r\n        }]\r\n\r\n        return updatedFields\r\n      })\r\n    } catch (error) {\r\n      console.error('Error fetching roles:', error)\r\n    }\r\n  }\r\n\r\n  const handleFieldChange = (name, value) => {\r\n    setFields((prevFields) => {\r\n      const fieldIndex = prevFields.findIndex((field) => field.name === name)\r\n      const updatedFields = [...prevFields]\r\n      updatedFields[fieldIndex].value = value\r\n      return updatedFields\r\n    })\r\n  }\r\n\r\n  const closing = () => {\r\n    setFields((prevFields) => {\r\n      const updatedFields = [...prevFields]\r\n      updatedFields.forEach((field) => {\r\n        field.value = ''\r\n      })\r\n      return updatedFields\r\n    })\r\n    closeModal()\r\n  }\r\n\r\n  return (\r\n    <ErrorBoundary>\r\n      <form onSubmit={(e) => addUser(e)}>\r\n        <div className=\"fixed inset-0 z-10 overflow-y-auto\">\r\n          <div className=\"flex items-end justify-center min-h-screen h-40 pt-4 px-4 pb-20 text-center sm:block sm:p-0\">\r\n            {/* ... (unchanged code) */}\r\n            <div className=\"inline-block align-bottom bg-white rounded-lg text-left shadow-xl transform transition-all sm:my-8 sm:align-middle w-[90vh]\">\r\n              {/* Modal content */}\r\n              <div className=\"bg-white px-4 pt-5 pb-4 sm:p-6 sm:pb-4 !important\">\r\n                <div className=\"border p-4\">\r\n                  <h2 className=\"text-lg font-semibold mb-4\">Create a New User</h2>\r\n                  {\r\n                    fields.map((field) => (\r\n                      <div key={field.name} className=\"mb-4\">\r\n                        <label htmlFor={field.name} className=\"block text-sm font-medium text-gray-600\">\r\n                          {field.label}:\r\n                        </label>\r\n                        {field.options\r\n                          ? (\r\n                            <select\r\n                              id={field.name}\r\n                              value={field.value}\r\n                              onChange={(e) => handleFieldChange(field.name, e.target.value)}\r\n                              className=\"mt-1 p-2 border rounded w-full\"\r\n                              required\r\n                            >\r\n                              {field.options.map((option) => (\r\n                                <option key={option.name} value={option.name}>\r\n                                  {option.name}\r\n                                </option>\r\n                              ))\r\n                              }\r\n                            </select>\r\n                          )\r\n                          : (\r\n                            <input\r\n                              type={field.type || 'text'}\r\n                              id={field.name}\r\n                              value={field.value}\r\n                              onChange={(e) => handleFieldChange(field.name, e.target.value)}\r\n                              placeholder={`Enter ${field.label}`}\r\n                              className=\"mt-1 p-2 border rounded w-full\"\r\n                              required\r\n                            />\r\n                          )}\r\n                      </div>\r\n                    ))}\r\n                </div>\r\n              </div>\r\n              <div className=\"bg-gray-50 px-4 py-3 sm:px-6 sm:flex sm:flex-row-reverse\">\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => closing()}\r\n                  className=\"mt-3 w-full inline-flex justify-center rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-base font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 sm:mt-0 sm:ml-3 sm:w-auto sm:text-sm\"\r\n                >\r\n            Cancel\r\n                </button>\r\n\r\n                <button type=\"submit\" className=\"bg-blue-500 text-white p-2 rounded\">{(update === true) ? 'Update User' : 'Save User'}</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </ErrorBoundary>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport FileViewer from 'react-file-viewer'\r\n\r\nconst Modal = {\r\n  DeleteModal: ({ handleConfirmDelete, handleCloseModal }) => (\r\n    <div className=\"fixed inset-0 z-10 overflow-y-auto\">\r\n      <div className=\"flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0\">\r\n        <div className=\"fixed inset-0 transition-opacity\" aria-hidden=\"true\">\r\n          <div className=\"absolute inset-0 bg-gray-500 opacity-75\"></div>\r\n        </div>\r\n\r\n        <span className=\"hidden sm:inline-block sm:align-middle sm:h-screen\" aria-hidden=\"true\">\r\n      &#8203;\r\n        </span>\r\n\r\n        <div className=\"inline-block align-bottom bg-white rounded-lg text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-lg sm:w-full\">\r\n          {/* Modal content */}\r\n          <div className=\"bg-white px-4 pt-5 pb-4 sm:p-6 sm:pb-4\">\r\n            <div className=\"sm:flex sm:items-start\">\r\n              <div className=\"mt-3 text-center sm:mt-0 sm:ml-4 sm:text-left\">\r\n                <h3 className=\"text-lg font-medium text-gray-900\">Confirm Deletion</h3>\r\n                <div className=\"mt-2\">\r\n                  <p className=\"text-sm text-gray-500\">\r\n                Are you sure you want to delete this item?\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"bg-gray-50 px-4 py-3 sm:px-6 sm:flex sm:flex-row-reverse\">\r\n            <button\r\n              type=\"button\"\r\n              onClick={handleConfirmDelete}\r\n              className=\"w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 bg-blue-600 text-base font-medium text-white hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 sm:ml-3 sm:w-auto sm:text-sm\"\r\n            >\r\n          Confirm\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              onClick={handleCloseModal}\r\n              className=\"mt-3 w-full inline-flex justify-center rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-base font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 sm:mt-0 sm:ml-3 sm:w-auto sm:text-sm\"\r\n            >\r\n          Cancel\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  ),\r\n  PreviewModal: ({ handleDownloadFile, handleCloseModal, ext, path, file }) => (\r\n    <div className=\"fixed inset-0 z-10 overflow-y-auto\">\r\n      <div className=\"flex items-end justify-center min-h-screen h-40 pt-4 px-4 pb-20 text-center sm:block sm:p-0\">\r\n        <div className=\"fixed inset-0 transition-opacity\" aria-hidden=\"true\">\r\n          <div className=\"absolute inset-0 bg-gray-500 opacity-75\" onClick={handleCloseModal}></div>\r\n        </div>\r\n\r\n        <span className=\"hidden sm:inline-block sm:align-middle sm:h-screen\" aria-hidden=\"true\">\r\n      &#8203;\r\n        </span>\r\n\r\n        <div className=\"inline-block align-bottom bg-white rounded-lg text-left shadow-xl transform transition-all sm:my-8 sm:align-middle w-[90vh]\">\r\n          {/* Modal content */}\r\n          <div className=\"bg-white px-4 pt-5 pb-4 sm:p-6 sm:pb-4 !important\">\r\n            <FileViewer\r\n              fileType={ext}\r\n              filePath={path}\r\n            />\r\n          </div>\r\n          <div className=\"bg-gray-50 px-4 py-3 sm:px-6 sm:flex sm:flex-row-reverse\">\r\n            <button\r\n              type=\"button\"\r\n              onClick={handleCloseModal}\r\n              className=\"mt-3 w-full inline-flex justify-center rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-base font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 sm:mt-0 sm:ml-3 sm:w-auto sm:text-sm\"\r\n            >\r\n          Cancel\r\n            </button>\r\n\r\n            <a\r\n              href={`http://localhost:8009/milestone/api/v1/file/download/${file}`}\r\n              className=\"mt-3 w-full inline-flex justify-center rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-base font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 sm:mt-0 sm:ml-3 sm:w-auto sm:text-sm\"\r\n            >\r\n          Download\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default Modal\r\n","import React, { useEffect, useState } from 'react'\r\nimport ManageUserModal from './ManageUserModal'\r\nimport httpClientRequest from '../lib/httpClientRequest'\r\nimport Modal from './Modal'\r\nconst UserManagement = () => {\r\n  const [users, setUsers] = useState([])\r\n  const [fetchUsers, setFetchUsers] = useState([])\r\n  const [viewCreateModal, setViewCreateModal] = useState(false)\r\n  const [deleteItemId, setDeleteItemId] = useState(null)\r\n  const [isModalOpen, setModalOpen] = useState(false)\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [updateData, setupdateData] = useState([])\r\n  const [forUpdate, setForUpdate] = useState([])\r\n\r\n  const addUser = () => {\r\n    setViewCreateModal(true)\r\n    setForUpdate(false)\r\n  }\r\n\r\n  const closeModal = () => {\r\n    setViewCreateModal(false)\r\n    setupdateData([])\r\n    setForUpdate(false)\r\n  }\r\n\r\n  const createUser = (data) => {\r\n    setFetchUsers(true)\r\n    closeModal()\r\n  }\r\n\r\n  useEffect(() => {\r\n    getUsers()\r\n  }, [setFetchUsers])\r\n\r\n  const getUsers = async () => {\r\n    setFetchUsers(true)\r\n    const userList = await httpClientRequest.get('/user/')\r\n    setUsers(userList)\r\n    setFetchUsers(false)\r\n  }\r\n\r\n  const handleDelete = (id) => {\r\n    setDeleteItemId(id)\r\n    setModalOpen(true)\r\n  }\r\n\r\n  const handleCloseModal = () => {\r\n    setModalOpen(false)\r\n    setDeleteItemId(null)\r\n    setFetchUsers(false)\r\n  }\r\n\r\n  const handleConfirmDelete = async () => {\r\n    setFetchUsers(true)\r\n    const companyData = await httpClientRequest.delete(`/user/?user_id=${deleteItemId}`)\r\n    handleCloseModal()\r\n    setFetchUsers(false)\r\n  }\r\n\r\n  const setUpdateData = (user) => {\r\n    setViewCreateModal(true)\r\n    setFetchUsers(true)\r\n    setupdateData(user)\r\n    setForUpdate(true)\r\n  }\r\n\r\n  return (\r\n    <div className=\"flex justify-around h-full w-full bg-secondary p-5\">\r\n      {/* Input Div */}\r\n      {isModalOpen && (<Modal.DeleteModal handleCloseModal={handleCloseModal} handleConfirmDelete={handleConfirmDelete}/>)}\r\n      { viewCreateModal && <ManageUserModal update={forUpdate} updateData={updateData} createUser={createUser} closeModal={closeModal} /> }\r\n      {/* Table Div */}\r\n      <div className=\"border p-4 w-1/2 flex-1 overflow-scroll  rounded-md bg-primary\">\r\n        <h2 className=\"text-lg font-semibold mb-4\">Users Table</h2>\r\n        <h2 onClick={addUser} className=\"text-lg font-semibold mb-4 border-2 border-cyan-100 w-28 px-2 hover:bg-primary rounded-md text-center text-slate-600 cursor-pointer text-gray-200\">Add New</h2>\r\n        <table className=\"w-full border-collapse\">\r\n          <thead>\r\n            <tr>\r\n              <th className=\"border p-2\">Username</th>\r\n              <th className=\"border p-2\">Email</th>\r\n              <th className=\"border p-2\">Name</th>\r\n              <th className=\"border p-2\">Department</th>\r\n              <th className=\"border p-2\">Position</th>\r\n              <th className=\"border p-2\">Phone No.</th>\r\n              <th className=\"border p-2\">Site Address</th>\r\n              <th className=\"border p-2\">Country</th>\r\n              <th className=\"border p-2\">State</th>\r\n              <th className=\"border p-2\">SubUrb</th>\r\n              <th className=\"border p-2\">Expiration Date</th>\r\n              <th className=\"border p-2\">MFA</th>\r\n              <th className=\"p-2\">Action</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {users?.data?.length > 0 && users.data.map((user, index) => (\r\n              <tr key={index}>\r\n                <td className=\"border p-2\">{user.username}</td>\r\n                <td className=\"border p-2\">{user.email}</td>\r\n                <td className=\"border p-2\">{user.first_name} {user.last_name}</td>\r\n                <td className=\"border p-2\">{user.department}</td>\r\n                <td className=\"border p-2\">{user.position}</td>\r\n                <td className=\"border p-2\">{user.phone_no}</td>\r\n                <td className=\"border p-2\">{user.site_address}</td>\r\n                <td className=\"border p-2\">{user.country}</td>\r\n                <td className=\"border p-2\">{user.state}</td>\r\n                <td className=\"border p-2\">{user.suburb}</td>\r\n                <td className=\"border p-2\">{user.MFA}</td>\r\n                <td className=\"border p-2\">{user.role}</td>\r\n                <td className=\"flex flex-row px-6 py-4 gap-2 items-center align-center justify-center\">\r\n                  <a onClick={() => setUpdateData(user)} href=\"#\" className=\"font-medium text-blue-600 dark:text-blue-500 hover:underline\">\r\n                    Edit\r\n                  </a>\r\n                  <a onClick={() => handleDelete(user.id)} href=\"#\" className=\"font-medium text-red-500 dark:text-blue-500 hover:underline\">\r\n                    Delete\r\n                  </a>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UserManagement\r\n"],"names":["ManageUserModal","_ref","handleSubmit","closeModal","createUser","update","updateData","users","setUsers","useState","fields","setFields","name","label","value","useEffect","fetchRole","async","prevFields","updatedFields","forEach","field","error","console","fetchUserDataForUpdate","userRole","httpClientRequest","get","roleFieldIndex","findIndex","options","data","handleFieldChange","fieldIndex","_jsx","ErrorBoundary","children","onSubmit","e","preventDefault","user","mappedData","reduce","acc","cur","result","post","addUser","className","_jsxs","map","htmlFor","id","onChange","target","required","option","type","placeholder","concat","onClick","DeleteModal","handleConfirmDelete","handleCloseModal","PreviewModal","_ref2","handleDownloadFile","ext","path","file","FileViewer","fileType","filePath","href","UserManagement","_users$data","fetchUsers","setFetchUsers","viewCreateModal","setViewCreateModal","deleteItemId","setDeleteItemId","isModalOpen","setModalOpen","isLoading","setIsLoading","setupdateData","forUpdate","setForUpdate","getUsers","userList","Modal","delete","length","index","username","email","first_name","last_name","department","position","phone_no","site_address","country","state","suburb","MFA","role","setUpdateData","handleDelete"],"sourceRoot":""}